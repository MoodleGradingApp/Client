{"version":3,"sources":["./$_lazy_route_resources|lazy|groupOptions: {}|namespace object","./src/app/app-routing.module.ts","./src/app/app.component.html","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/feedback.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 8255;\nmodule.exports = webpackEmptyAsyncContext;","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, { relativeLinkResolution: 'legacy' })],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","<!--\n-- Authors: Emily Costa and Michael Sisko\n--\n-- Citation(s):\n-- Autosizing Textarea: https://stackoverflow.com/questions/2803880/ by Martin Prestone\n--\n-->\n\n\n<div class=\"panel panel-default hide-outline\" id=\"master-panel\">\n    <p>Developed by: Emily Costa & Michael Sisko<br>Advised by: Victor Norman</p>\n    <h1 class=\"title\">\n        Grading Assistant\n        <span class=\"demo-text\"><a href=\"assets/demo_full.mp4\">See demo</a></span>\n    </h1>\n\n    <div class=\"row\">\n        <div class=\"col fixed-panel\" id=\"main-left-panel\">\n            <div class=\"panel panel-default hide-outline tight\">\n                <div class=\"panel panel-default\">\n                    <div class=\"panel panel-default hide-outline tight\" id=\"item-info\">\n                        <div id=\"assignment\">\n                            <label for=\"assignment\">Assignment Name:&nbsp;</label>\n                            <input\n                            class=\"input-box\"\n                            type=\"text\"\n                            id=\"title\"\n                            name=\"assignment\"\n                            placeholder=\"Ex. Homework 1\"\n                            data-testid=\"nameInput\"\n                            [(ngModel)]=\"assignmentName\"\n                            >\n                        </div>\n                        <div id=\"max-pts\">\n                            <label for=\"max-pts\">Max Points: {{maxScore}}</label>\n                        </div>\n                    </div>\n                    <div class=\"panel panel-default hide-outline tight btn-set\">\n                        <button type=\"button\" class=\"btn-primary-blue\" (click)=\"previousStudent()\" data-testid=\"prevStudentBtn\">Prev Student</button>\n                        <button type=\"button\" class=\"btn-primary-blue\" (click)=\"nextStudent()\" data-testid=\"nextStudentBtn\">Next Student</button>\n                        <button type=\"button\" class=\"btn-primary-blue\" (click)=\"showChart = !showChart\">{{ showChart ? \"Hide Stats\" : \"Show Stats\" }}</button>\n                    </div>\n                </div>\n                <div class=\"panel panel-default\">\n                    <div>\n                        <label for=\"Student\">Student Name: {{currentStudentName}}</label>\n                    </div>\n                    <div class=\"panel panel-default hide-outline tight btn-set\">\n                        <button type=\"button\" id=\"save-btn\" class=\"btn-primary-green\" (click)=\"perfectScore()\">Perfect Score</button>\n                        <button type=\"button\" id=\"save-btn\" class=\"btn-primary-green\" (click)=\"clearScore()\">Clear Score</button>\n                    </div>\n                    <br>\n                    <div class=\"feedback-table-container\">\n                        <table id=\"feedback-table\">\n                            <thead>\n                                <tr>\n                                    <th id=\"trash-header\">Delete</th>\n                                    <th>Feedback</th>\n                                    <th>Deduction</th>\n                                    <th>Apply</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                <tr *ngFor=\"let row of feedbackRows; let i = index;\">\n                                    <td (click)=\"deleteRow(i)\">\n                                        <button\n                                            id=\"trash\"\n                                            data-testid=\"trashBtn\">\n                                            <i class=\"fa fa-trash\"></i>\n                                        </button>\n                                    </td>\n                                    <td>\n                                        <textarea\n                                            class=\"input-box\"\n                                            id=\"feedback\"\n                                            data-testid=\"feedbackInput\"\n                                            placeholder=\"Say something constructive...\"\n                                            [(ngModel)]=\"row.feedback\"\n                                            (ngModelChange)=\"onFeedbackChange($event, i)\"\n                                            type=\"text\"\n                                            name=\"text\"\n                                            oninput='this.style.height = \"\";\n                                            this.style.height = this.scrollHeight + 3 + \"px\"'>\n                                        </textarea>\n                                    </td>\n                                    <td>\n                                        <input\n                                            class=\"input-box\"\n                                            id=\"deduction\"\n                                            data-testid=\"deductionInput\"\n                                            placeholder=\"0\"\n                                            [(ngModel)]=\"row.deduction\"\n                                            (ngModelChange)=\"onDeductionChange($event, i)\"\n                                            type=\"number\"/>\n                                    </td>\n                                    <td>\n                                        <input\n                                            class=\"checkbox\"\n                                            id=\"checkbox{{i}}\"\n                                            data-testid=\"applyBtn\"\n                                            [(ngModel)]=\"row.selected\"\n                                            (ngModelChange)=\"onSelectedChange($event, i)\"\n                                            type=\"checkbox\"\n                                            [attr.disabled]=\"isCheckDisabled ? true : null\"/>\n                                    </td>\n                                </tr>\n                            </tbody>\n                        </table>\n                    </div>\n                    <br>\n                    <button\n                        type=\"button\"\n                        id=\"addFeedbackBtn\"\n                        class=\"btn-primary-blue\"\n                        (click)=\"addRow()\"\n                        data-testid=\"addFeedbackBtn\"\n                    >Add Feedback</button>\n                    <br><br>\n                </div>\n            </div>\n            <div *ngIf=\"showChart\" class=\"grade-stats\">\n                <apx-chart\n                    [series]=\"chartOptions.series\"\n                    [chart]=\"chartOptions.chart\"\n                    [xaxis]=\"chartOptions.xaxis\"\n                    [yaxis]=\"chartOptions.yaxis\"\n                    [title]=\"chartOptions.title\"\n                ></apx-chart>\n                <div class=\"feedback-stats\">\n                    <h4>Feedback Count:</h4>\n                    <tbody>\n                        <tr *ngFor=\"let stats of feedbackCount;\">\n                            <td class=\"feedback-count\">{{stats.deduction}}:</td>\n                            <td class=\"feedback-string\">{{stats.feedback}}</td>\n                        </tr>\n                    </tbody>\n                </div>\n                <div class=\"class-stats\">\n                    <h4>Grade Stats:</h4>\n                    <tbody>\n                        <tr>\n                            <td class=\"average-score\">Average Score: {{averageScore}}</td>\n                        </tr>\n                        <tr>\n                            <td class=\"min-score\">Min Score: {{minScore}}</td>\n                        </tr>\n                        <tr>\n                            <td class=\"max-score\">Max Score: {{maxScoreStat}}</td>\n                        </tr>\n                    </tbody>\n                </div>\n            </div>\n        </div>\n    <div class=\"panel panel-default\" id=\"main-right-panel\">\n        <div class=\"csv-import-btn\">\n    <div class=\"panel panel-default tight hide-outline sticky outer-nowrap\">\n        <label\n            for=\"csvFileUpload\"\n            id=\"csvImportBtn\"\n            class=\"btn-primary-blue inner-nowrap\"\n        >Import File (exported from Moodle)</label>\n        <input\n            id=\"csvFileUpload\"\n            data-testid=\"importCSV\"\n            class=\"inner-nowrap sticky\"\n            type=\"file\"\n            #fileImportInput\n            name=\"File Upload\"\n            accept=\".csv\"\n            (change)=\"importCsvFileListener($event)\"/>\n        <p *ngIf=\"!validFile\" class=\"file-warning inner-nowrap\">*Invalid CSV File</p>\n        <button\n            type=\"button\"\n            class=\"btn-primary-blue\"\n            id=\"exportBtn\"\n            (click)=\"exportCSV()\"\n        >Export for Moodle</button>\n\n        <button type=\"button\" id=\"save-btn\" class=\"btn-primary-blue\"\n            (click)=\"saveProgress()\"\n        >Save Progress</button>\n        <label for=\"jsonFileUpload\" id=\"jsonImportBtn\" class=\"btn-primary-blue inner-nowrap\">\n            Load Progress</label>\n        <input\n            id=\"jsonFileUpload\"\n            data-testid=\"importJSON\"\n            class=\"inner-nowrap sticky\"\n            type=\"file\"\n            #fileImportInput\n            name=\"File Upload\"\n            accept=\".json\"\n            (change)=\"importJsonFileListener($event)\"/>\n    </div>\n    <div class=\"panel panel-default tight hide-outline csv-result-table\">\n        <table class=\"csvTable\">\n            <thead *ngIf=\"validFile\">\n                <tr>\n                    <!-- <th class=\"narrow csv-table-head\">#</th> -->\n                    <th class=\"narrow csv-table-head\" (click)=\"sortOnName()\">Name</th>\n                    <th class=\"narrow csv-table-head\" (click)=\"sortOnEmail()\">Email</th>\n                    <th class=\"narrow csv-table-head\" (click)=\"sortOnTimestamp()\">Timestamp</th>\n                    <th class=\"narrow csv-table-head\" (click)=\"sortOnGrade()\">Grade</th>\n                    <th class=\"wide csv-table-head\"   (click)=\"sortOnFeedback()\">Feedback</th>\n                </tr>\n            </thead>\n            <tbody>\n                <tr class=\"csv-data\" *ngFor=\"let i = index; let stud of students;\"\n                    (click)=\"rowSelected(i)\" (click)=\"highlightRow(i)\">\n                    <!-- <td class=\"narrow\">{{i+1}}</td> -->\n                    <td class=\"narrow\">{{stud.fullName}}</td>\n                    <td class=\"narrow\">{{stud.email}}</td>\n                    <td class=\"narrow\">{{stud.gradeLastModified}}</td>\n                    <td>{{stud.grade}}</td>\n                    <td class=\"wide\" id=\"feedback-column\">{{feedbackStrings[stud.num]}}</td>\n                </tr>\n            </tbody>\n        </table>\n    </div>\n</div>\n","import { Component, HostListener } from '@angular/core';\nimport { FormBuilder, FormArray } from '@angular/forms';\nimport { ViewChild } from '@angular/core';\nimport { FeedbackService, HomeworkFeedback, StudentInfo } from './feedback.service';\nimport {\n  ChartComponent,\n  ApexAxisChartSeries,\n  ApexChart,\n  ApexYAxis,\n  ApexXAxis,\n  ApexTitleSubtitle,\n  ApexDataLabels,\n  ApexPlotOptions,\n  ApexAnnotations,\n  ApexFill,\n  ApexStroke,\n  ApexGrid,\n  ApexStates,\n  ApexTooltip\n} from \"ng-apexcharts\";\n\nexport type ChartOptions = {\n  series: ApexAxisChartSeries;\n  chart: ApexChart;\n  yaxis: ApexYAxis;\n  xaxis: ApexXAxis;\n  title: ApexTitleSubtitle;\n  dataLabels: ApexDataLabels;\n  plotOptions: ApexPlotOptions;\n  annotations: ApexAnnotations;\n  fill: ApexFill;\n  stroke: ApexStroke;\n  grid: ApexGrid;\n  states: ApexStates;\n  tooltip: ApexTooltip;\n};\n\nexport class FeedbackRow {\n    feedback: string;\n    deduction: number;\n    selected: boolean;\n}\n\n// These two enums are for sorting student info.\nenum SortColumn {\n  ID,\n  NAME,\n  EMAIL,\n  TIMESTAMP,\n  GRADE,\n  FEEDBACK,\n};\n\nenum SortDir {\n  ASC,\n  DESC,\n};\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\n\nexport class AppComponent {\n  public feedbackArray: FormArray;\n  public maxScore: string;\n  public feedbackInputText: string;\n  public showChart: boolean = false;\n  public averageScore: number = 0;\n  public minScore: number = 0;\n  public maxScoreStat: number = 0;\n\n  public feedbackText: string = '';\n\n  assignmentName: string = '';\n\n  @ViewChild(\"chart\") chart: ChartComponent;\n  public chartOptions: Partial<ChartOptions>;\n\n  validFile: boolean = true;\n  currentStudentName: string;\n  currentStudentIndex: number = -1;\n  isRowSelected: boolean =  false;\n  previousRow: number = 2;\n  selectedUser: Array<string>[] = [];\n\n  students: StudentInfo[];\n  feedbackCount: HomeworkFeedback[] = [];\n  feedbackStrings: string[] = [];\n  header: boolean = false;\n\n  feedbackRows: Array<FeedbackRow> = [];\n\n  // disable check boxes when no csv is imported\n  isCheckDisabled: boolean = true;\n\n  private studentsSortedOn = SortColumn.ID;\n  private studentsSortedAscOrDsc = SortDir.ASC;\n\n  constructor(private fb: FormBuilder, private feedbackService: FeedbackService) {\n    const newRow: FeedbackRow = {feedback: \"\", deduction: 0, selected: false};\n    this.feedbackRows.push(newRow);\n    this.feedbackService.feedbackCreate(null, null);\n\n    this.chartOptions = {\n      series: [\n        {\n          name: \"Grades\",\n          data: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n        }\n      ],\n      chart: {\n        foreColor: '#FFFFFF',\n        height: 400,\n        type: \"bar\",\n        toolbar: {\n          show: false\n        }\n      },\n      title: {\n        text: \"Grade Distribution\",\n        align: \"center\"\n      },\n      yaxis: {\n        title: {\n          text: \"No. of Students\"\n        }\n      },\n      xaxis: {\n        title: {\n          text: \"Grades Percentage\",\n          offsetY: -10,\n          offsetX: -20,\n        },\n        categories: [\"0-9\", \"10-19\",  \"20-29\",  \"30-39\",  \"40-49\",  \"50-59\",  \"60-69\",  \"70-79\", \"80-89\", \"90-100\"]\n      },\n      states: {\n        hover: {\n          filter: {\n            type: \"none\"\n          }\n        }\n      },\n    };\n  }\n\n  async importCsvFileListener($event: any) {\n    // clear current table\n    // display warning if student table is not empty\n    // console.log(this.csvRecords);\n    // console.log(this.csvRecords != undefined);\n    if (this.students !== undefined) {\n      if (confirm(\"Are you sure you want to upload another CSV file? Your current work will be deleted!\")) {\n        // do nothing\n        console.log(\"User pressed Yes!\");\n      } else {\n        console.log(\"User pressed No!\");\n        return;\n      }\n    }\n\n    this.feedbackService.clearStudents();\n    // Select the file from the event\n    const file = $event.srcElement.files;\n    // wait for this to return\n    this.feedbackService.parseFile(file).subscribe(\n      result => {\n        if (result instanceof Array) {\n          this.feedbackService.parseCSV(result);\n          this.students = this.feedbackService.getStudents();\n          this.studentsSortedAscOrDsc = SortDir.ASC;\n          this.studentsSortedOn = SortColumn.ID;\n          this.validFile = this.feedbackService.correctFile;\n          if (this.validFile) {\n            // select and highlight first student\n            this.currentStudentIndex = 0;\n            this.maxScore = this.feedbackService.maxScore;\n            // get feedback strings to display\n            this.feedbackStrings = this.feedbackService.getFeedbackStrings();\n            // enable checkboxes\n            this.isCheckDisabled = null;\n            // uncheck check boxes\n            this.updateCheckboxState();\n            // reset chart data\n            this.updateSeries();\n          } else {\n            this.maxScore = null;\n            console.log('Error Bad CSV');\n          }\n        } else {\n          // handle empty CSV\n          this.maxScore = null;\n          this.students = [];\n          console.log('Error', result);\n        }\n      }\n    )\n  }\n\n  async importJsonFileListener($event: any) {\n    await this.feedbackService.importDataAsJson($event.srcElement.files);\n    this.feedbackStrings = this.feedbackService.getFeedbackStrings();\n    this.students = this.feedbackService.getStudents();\n    this.studentsSortedAscOrDsc = SortDir.ASC;\n    this.studentsSortedOn = SortColumn.ID;\n    this.validFile = true;\n    this.currentStudentIndex = -1;\n    this.maxScore = this.feedbackService.maxScore;\n    this.isCheckDisabled = null;\n\n    // build feedbackRows\n    const feedbackData: HomeworkFeedback[] = this.feedbackService.getFeedbacks();\n    this.feedbackRows = [];\n    feedbackData.forEach(row => {\n      this.feedbackRows.push({ feedback: row.feedback,\n                               deduction: row.deduction,\n                               selected: false });\n    });\n    this.assignmentName = this.feedbackService.getAssignmentName();\n  }\n\n  ngOnInit(): void {\n    // no-op\n  }\n\n  highlightRow(row: number) {\n    // add 'selected' class to tr element\n    const trs = document.querySelectorAll(\"tr.csv-data\");\n    if (! this.isRowSelected) {\n      this.isRowSelected = true;\n    } else {\n      trs[this.previousRow].classList.remove(\"selected\");\n    }\n    trs[row].classList.add(\"selected\");\n    this.previousRow = row;\n  }\n\n  rowSelected(index: number) {\n    this.currentStudentIndex = index;\n    this.currentStudentName = this.students[index].fullName;\n    this.maxScore = this.students[0].maxGrade;\n    // code to check boxes off when on a certain student\n    this.updateCheckboxState();\n    // console.log(this.csvRecords);\n  }\n\n  updateCheckboxState() {\n    if (this.currentStudentIndex === -1) {\n      return;\n    }\n    // console.log(\"Update Check Boxes\");\n    // console.log('student feedbackBoolean array = ', this.students[this.currentStudentIndex].feedbackBoolean);\n    for (let i = 0; i < this.students[this.currentStudentIndex].feedbackBoolean.length; i++) {\n      let checkbox = document.getElementById(\"checkbox\" + i.toString()) as HTMLInputElement;\n      if (this.students[this.currentStudentIndex].feedbackBoolean[i]) {\n        checkbox.checked = true;\n      } else {\n        checkbox.checked = false;\n      }\n    }\n  }\n\n  studentParser(increment: number): void {\n    if (this.currentStudentIndex === 0 && increment === -1 || this.currentStudentIndex === this.students.length-1 && increment === 1) {\n      return\n    }\n    this.currentStudentIndex += increment;\n    this.rowSelected(this.currentStudentIndex);\n    this.highlightRow(this.currentStudentIndex);\n    this.validFile = this.feedbackService.correctFile;\n  }\n\n  nextStudent(): void {\n    this.studentParser(1);\n  }\n\n  previousStudent(): void {\n    if (this.currentStudentIndex > 0) {\n      this.studentParser(-1);\n    }\n  }\n\n  addRow(): void {\n    const newRow: FeedbackRow = {feedback: \"\", deduction: 0, selected: false};\n    this.feedbackRows.push(newRow);\n    this.feedbackService.feedbackCreate(null, null);\n    // console.log(this.feedbackRows);\n  }\n\n  deleteRow(index: number) {\n    // add row so there will never be 0 rows\n    if (this.feedbackRows.length === 1) {\n      this.addRow();\n    }\n    this.feedbackRows.splice(index, 1);\n    this.feedbackService.feedbackDelete(index);\n\n    // update students' feedback string display\n    this.updateCheckboxState();\n    this.feedbackStrings = this.feedbackService.getFeedbackStrings();\n    this.updateSeries();\n  }\n\n  onFeedbackChange(newValue: string, index: number) {\n    this.feedbackService.feedbackStringUpdate(index, newValue);\n    // update students' feedback string display\n    this.feedbackStrings = this.feedbackService.getFeedbackStrings();\n    this.updateSeries();\n  }\n\n  onDeductionChange(newValue: number, index: number) {\n    this.feedbackService.feedbackDeductionUpdate(index, newValue);\n    this.feedbackStrings = this.feedbackService.getFeedbackStrings();\n    this.updateSeries();\n  }\n\n  onSelectedChange(newValue: boolean, feedbackIndex: number) {\n    if (this.currentStudentIndex === 0) {\n      this.highlightRow(this.currentStudentIndex);\n    }\n\n    if (this.currentStudentIndex >= 0) {\n      if (newValue === true) {\n        this.feedbackService.feedbackApply(feedbackIndex, this.currentStudentIndex);\n      } else {\n        this.feedbackService.feedbackUnapply(feedbackIndex, this.currentStudentIndex);\n      }\n      // update students' feedback string display\n      this.feedbackStrings = this.feedbackService.getFeedbackStrings();\n      this.updateSeries();\n    }\n  }\n\n  saveProgress() {\n    this.feedbackService.exportDataAsJson(this.assignmentName);\n  }\n\n  perfectScore() {\n    if (this.currentStudentIndex >= 0) {\n      this.feedbackService.perfectGrade(this.currentStudentIndex);\n    }\n    this.updateCheckboxState();\n    // update students' feedback string display\n    this.feedbackStrings = this.feedbackService.getFeedbackStrings();\n    this.updateSeries();\n  }\n\n  clearScore() {\n    if (this.currentStudentIndex >= 0) {\n      this.feedbackService.clearGrade(this.currentStudentIndex);\n    }\n    this.updateCheckboxState();\n    // update students' feedback string display\n    this.feedbackStrings = this.feedbackService.getFeedbackStrings();\n    console.log(this.feedbackCount);\n    this.updateSeries();\n  }\n\n  sortOnName() {\n    console.log(\"hi from sort on name\");\n    if (this.studentsSortedOn !== SortColumn.NAME) {\n      this.studentsSortedOn = SortColumn.NAME;\n      this.studentsSortedAscOrDsc = SortDir.ASC;\n    } else {\n      // already sorted on this column, so switch direction\n      this.studentsSortedAscOrDsc = this.studentsSortedAscOrDsc === SortDir.ASC ? SortDir.DESC : SortDir.ASC;\n    }\n  }\n\n  sortOnEmail() {\n    console.log(\"hi from sort on email\");\n    if (this.studentsSortedOn !== SortColumn.EMAIL) {\n      this.studentsSortedOn = SortColumn.EMAIL;\n      this.studentsSortedAscOrDsc = SortDir.ASC;\n    } else {\n      // already sorted on this column, so switch direction\n      this.studentsSortedAscOrDsc = this.studentsSortedAscOrDsc === SortDir.ASC ? SortDir.DESC : SortDir.ASC;\n    }\n    this.students = this.students.sort((s1, s2) => {\n      return this.studentsSortedAscOrDsc === SortDir.ASC ?\n        s2.email.localeCompare(s1.email) : s1.email.localeCompare(s2.email);\n    });\n  }\n\n  sortOnTimestamp() {\n    console.log(\"hi from sort on timestamp\");\n    if (this.studentsSortedOn !== SortColumn.TIMESTAMP) {\n      this.studentsSortedOn = SortColumn.TIMESTAMP;\n      this.studentsSortedAscOrDsc = SortDir.ASC;\n    }else {\n      // already sorted on this column, so switch direction\n      this.studentsSortedAscOrDsc = this.studentsSortedAscOrDsc === SortDir.ASC ? SortDir.DESC : SortDir.ASC;\n    }\n  }\n\n  sortOnGrade() {\n    console.log(\"hi from sort on grade\");\n    if (this.studentsSortedOn !== SortColumn.GRADE) {\n      this.studentsSortedOn = SortColumn.GRADE;\n      this.studentsSortedAscOrDsc = SortDir.ASC;\n    } else {\n      // already sorted on this column, so switch direction\n      this.studentsSortedAscOrDsc = this.studentsSortedAscOrDsc === SortDir.ASC ? SortDir.DESC : SortDir.ASC;\n    }\n  }\n\n  sortOnFeedback() {\n    console.log(\"hi from sort on feedback\");\n    if (this.studentsSortedOn !== SortColumn.FEEDBACK) {\n      this.studentsSortedOn = SortColumn.FEEDBACK;\n      this.studentsSortedAscOrDsc = SortDir.ASC;\n    } else {\n      // already sorted on this column, so switch direction\n      this.studentsSortedAscOrDsc = this.studentsSortedAscOrDsc === SortDir.ASC ? SortDir.DESC : SortDir.ASC;\n    }\n  }\n\n  // To Do: Delete Later! Useful for Debugging!\n  // tempFunction() {\n  //   this.feedback = this.feedbackService.feedbackRead();\n  //   console.log(this.feedback);\n  //   console.log(this.feedbackCount);\n  //   console.log(this.csvRecords);\n  // }\n\n  updateSeries() {\n    let chartData: Array<number> = this.feedbackService.updateChartData();\n    // update data in chart\n    this.chartOptions.series = [{\n      data: chartData\n    }];\n    this.feedbackCount = this.feedbackService.updateFeedbackCount();\n    this.averageScore = this.feedbackService.updateAverageStat();\n    [this.minScore, this.maxScoreStat] = this.feedbackService.updateMinMaxStats();\n    // console.log(\"update chart data!\")\n  }\n\n  exportCSV(): void {\n    this.feedbackService.exportCSV(this.assignmentName);\n  }\n\n  // Warn user if reloading, closing, navigating away from page.\n  @HostListener('window:beforeunload', ['$event'])\n  unloadHandler(event: Event) {\n    window.opener.location.reload();\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule} from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { NgxCsvParserModule } from 'ngx-csv-parser';\nimport { NgApexchartsModule } from 'ng-apexcharts';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    ReactiveFormsModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    FormsModule,\n    NgxCsvParserModule,\n    NgApexchartsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }","import { Injectable } from '@angular/core';\nimport { Observable, of } from 'rxjs';\nimport { NgxCSVParserError, NgxCsvParser } from 'ngx-csv-parser';\nimport * as dayjs from 'dayjs';\n\nexport interface StudentInfo {\n  num: number,        // index of this record.\n  email: string,\n  fullName: string,\n  grade: string,\n  gradeChange: string,\n  identifier: string,\n  gradeLastModified: string,\n  submissionLastModified: string,\n  maxGrade: string,\n  onlineText: string,\n  status: string,\n  feedbackBoolean: Array<boolean>,\n}\n\nexport interface HomeworkFeedback {\n  feedback: string,\n  deduction: number\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FeedbackService {\n\n  constructor(private ngxCsvParser: NgxCsvParser) { }\n\n  private students: StudentInfo[] = [];\n  private feedbacks: HomeworkFeedback[] = [];\n  private feedbackCounts: HomeworkFeedback[] = [];\n\n  private assignmentNameFromJSONFile = '';\n\n  public correctFile: boolean;\n  public maxScore: string;\n\n  parseFile(fileName: any) : Observable<any[] | NgxCSVParserError | string> {\n    // Check for empty CSV file\n    if (fileName[0][\"size\"] > 3) {\n      this.correctFile = true;\n    } else {\n      this.correctFile = false;\n      this.clearStudents()\n      return of(\"File is empty\");\n    }\n\n    // reference: https://www.npmjs.com/package/ngx-csv-parser\n    // Parse the file you want to select for the operation along with the configuration\n    const response = this.ngxCsvParser.parse(fileName[0], { header: true, delimiter: ',' })\n    return response;\n  }\n\n  parseCSV(csvRecords: Array<any>): void {\n    // console.log('Parser Result', result);\n\n    // check headers if correct CSV file\n    if (\n      csvRecords[0] === undefined ||\n      csvRecords[0][\"Identifier\"] === undefined ||\n      csvRecords[0][\"Email address\"] === undefined ||\n      csvRecords[0][\"Feedback comments\"] === undefined ||\n      csvRecords[0][\"Full name\"] === undefined ||\n      csvRecords[0][\"Grade\"] === undefined ||\n      csvRecords[0][\"Grade can be changed\"] === undefined ||\n      csvRecords[0][\"Identifier\"] === undefined ||\n      csvRecords[0][\"Last modified (grade)\"] === undefined ||\n      csvRecords[0][\"Last modified (submission)\"] === undefined ||\n      csvRecords[0][\"Maximum Grade\"] === undefined ||\n      csvRecords[0][\"Online text\"] === undefined ||\n      csvRecords[0][\"Status\"] === undefined) {\n      console.log(\"Wrong CSV File!\");\n      this.correctFile = false;\n      this.clearStudents();\n    } else {\n      console.log(\"Correct CSV File!\");\n      this.correctFile = true;\n      this.createStudentsFromCsv(csvRecords);\n    }\n  }\n\n  // Make a download button\n  public exportCSV(assignmentName: string) {\n\n    // Remove forbidden characters from assignment title\n    const title = this.cleanUpAssignmentTitle(assignmentName);\n\n    // Get current date and time\n    const currentDateTime = dayjs().format('_YYYY-MM-DD');\n\n    // Pass string into handle for data-table\n    const my_data_string = this.buildCSV(this.students);\n\n    // Create an href element in the DOM\n    let a = document.createElement(\"a\");\n    a.setAttribute('style', 'display:none;');\n    document.body.appendChild(a);\n\n    // Create object of type csv text file\n    const blob = new Blob([my_data_string], { type: 'text/csv' });\n    const url = window.URL.createObjectURL(blob);\n\n    a.href = url;\n    a.download = title + currentDateTime + '.csv';\n    a.click();\n  }\n\n  // This manually constructs our CSV file string\n  private buildCSV(students: Array<StudentInfo>): string {\n    // console.log(JSON.stringify(students, null, 2));\n    let my_data = students;\n    let csv_file = '';\n\n    // create header row\n    const row = 'Identifier,Full name,Email address,Status,Grade,Maximum Grade,Grade can be changed,Last modified (submission),Online text,Last modified (grade),Feedback comments'\n\n    // Add row and newline + carriage-return\n    csv_file += row + '\\r\\n';\n\n    // Build and add lines to csv_file\n    for (let i = 0; i < my_data.length; i++) {\n        let line = '';\n        for (let index in my_data[i]) {\n          if (line !== '') {\n            line += ','   // do comma-separation\n          }\n          if (index === 'gradeLastModified' || index === 'submissionLastModified') {\n            line += '\"' + my_data[i][index] + '\"'\n          } else if (index == 'feedbackBoolean') {\n            let feedbackString = this.createCSVFeedbackString(my_data[i][index])\n            // wrap each field in double quotes\n            line += '\"' + feedbackString + '\"'\n            // console.log(\"Return from function:\" + my_data[i][index])\n          }\n          else {\n            // console.log('mydata[i][index] = ', my_data[i][index])\n            line += my_data[i][index];\n          }\n\n        }\n        csv_file += line + '\\r\\n';\n    }\n\n    // End of file\n    return csv_file;\n  }\n\n  private createCSVFeedbackString(feedback: Array<boolean>): string {\n    let feedbackStringArray = [];\n    for (let n = 0; n < this.feedbacks.length; n++) {\n      if (feedback[n]) {\n        // if the feedback string has a double quote in it, add an extra one.\n        const res = this.feedbacks[n].feedback.replace(/\"/g, '\"\"');\n        feedbackStringArray.push(\"-\" + this.feedbacks[n].deduction + \": \" + res)\n      }\n    }\n    const feedbackString = feedbackStringArray.join('; ')\n    return feedbackString;\n  }\n\n  private createStudentsFromCsv(csvRecords: Array<{}>) {\n    // console.log(JSON.stringify(csvRecords, null, 2));\n    // put csv-parser results into newStudent[]\n    for (let i = 0; i < csvRecords.length; i++) {\n      // initialize each student object\n      const newStudent: StudentInfo = {\n        num: i,\n        identifier: csvRecords[i][\"Identifier\"],\n        fullName: csvRecords[i][\"Full name\"],\n        email: csvRecords[i][\"Email address\"].split(\"@\", 1)[0],  // only the username part\n        status: csvRecords[i][\"Status\"],\n        grade: csvRecords[i][\"Grade\"],\n        maxGrade: csvRecords[i][\"Maximum Grade\"],\n        gradeChange: csvRecords[i][\"Grade can be changed\"],\n        submissionLastModified: csvRecords[i][\"Last modified (submission)\"],\n        onlineText: csvRecords[i][\"Online text\"],\n        gradeLastModified: csvRecords[i][\"Last modified (grade)\"],\n        // Could be that the user added multiple feedbacks before loading the csv file\n        // (seems unlikely but could be done). So, we need to initialize feedbackBoolean array\n        // to have false for each feedback in existence already.\n        feedbackBoolean: new Array(this.feedbacks.length).fill(false),\n      }\n      this.students.push(newStudent);\n    }\n    this.maxScore = this.students[0].maxGrade;\n  }\n\n  clearStudents() {\n    this.students = [];\n  }\n\n  clearFeedbacks() {\n    this.feedbacks = [];\n    this.feedbackCounts = [];\n  }\n\n  private cleanUpAssignmentTitle(assignmentName: string): string {\n    // Remove forbidden characters from assignment title and replace spaces with underscores\n    assignmentName = assignmentName.replace(/[#<>^\\-~$%!&*,.;\\\\\"?'\\/{}:@+`|=\\[\\]]/g, '')\n    assignmentName = assignmentName.replace(/ /g, '_');\n    if (assignmentName === '') {\n      assignmentName = \"assignment\";\n    }\n    return assignmentName;\n  }\n\n  exportDataAsJson(assignmentName: string) {\n    const wholeThing = {\n      \"students\": this.students,\n      \"feedbacks\": this.feedbacks,\n      \"assignmentName\": assignmentName,\n    };\n    const jsonWholeThing = JSON.stringify(wholeThing);\n\n    const title = this.cleanUpAssignmentTitle(assignmentName) + \".json\";\n\n    const dataStr = \"data:text/json;charset=utf-8,\" + encodeURIComponent(JSON.stringify(wholeThing));\n\n    // https://stackoverflow.com/questions/19721439/download-json-object-as-a-file-from-browser\n    let a = document.createElement(\"a\");\n    a.setAttribute('style', 'display:none;');\n    document.body.appendChild(a);\n    a.setAttribute(\"href\", dataStr);\n    a.setAttribute(\"download\", title);\n    a.click();\n    a.remove();\n  }\n\n  importDataAsJson(files: File[]): Promise<void> {\n    return new Promise((resolve, reject) => {\n      const file = files[0];\n      const fr = new FileReader();\n      fr.onload = (e) => {\n        let lines = e.target.result;\n        const res = JSON.parse(lines as string);\n        // console.log('got json file parsed: res = ', JSON.stringify(res, null, 2));\n        this.students = res[\"students\"];\n        this.feedbacks = res[\"feedbacks\"];\n        this.assignmentNameFromJSONFile = res[\"assignmentName\"];\n        this.maxScore = this.students[0].maxGrade;\n        this.correctFile = true;\n        resolve();\n      };\n      fr.readAsText(file);\n    });\n  }\n\n  getStudents(): StudentInfo[] {\n    return this.students;\n  }\n\n  getFeedbacks(): HomeworkFeedback[] {\n    return this.feedbacks;\n  }\n\n  getAssignmentName(): string {\n    return this.assignmentNameFromJSONFile;\n  }\n\n  feedbackCreate(feedbackString: string, points: number): void {\n    const newFeedback: HomeworkFeedback = {\n      feedback: feedbackString,\n      deduction: points\n    }\n    this.feedbacks.push(newFeedback);\n\n    // add this feedback to the student feedback array as false\n    for (let i = 0; i < this.students.length; i++) {\n      this.students[i].feedbackBoolean.push(false);\n    }\n  }\n\n  feedbackRead(): HomeworkFeedback[] {\n    return this.feedbacks;\n  }\n\n  feedbackStringUpdate(index: number, feedbackString: string): void {\n    // update values in feedback array\n    this.feedbacks[index].feedback = feedbackString;\n  }\n\n  feedbackDeductionUpdate(index: number, points: number): void {\n    this.feedbacks[index].deduction = points;\n    for (let i = 0; i < this.students.length; i++) {\n      if (this.students[i].feedbackBoolean[index]) {\n        this.gradeUpdate(i);\n      }\n    }\n  }\n\n  feedbackDelete(index: number): void {\n    // let response = window.confirm(\"Deleting this option will remove it universally. Are you sure?\");\n    // if (response) {\n    // delete feedback in students' boolean feedback arrays\n    for (let i = 0; i < this.students.length; i++) {\n      if (this.students[i].feedbackBoolean[index]) {\n        // add deduction value to student grade before delete\n        const newGrade = parseFloat(this.students[i].grade) + this.feedbacks[index].deduction\n        this.students[i].grade = newGrade.toString();\n      }\n      this.students[i].feedbackBoolean.splice(index,1);\n    }\n\n    // remove 1 element at index\n    this.feedbacks.splice(index,1);\n    // }\n  }\n\n  feedbackApply(feedbackIndex: number, studentIndex: number): void {\n    this.students[studentIndex].feedbackBoolean[feedbackIndex] = true;\n    // update grade\n    this.gradeUpdate(studentIndex);\n  }\n\n  feedbackUnapply(feedbackIndex: number, studentIndex: number): void {\n    this.students[studentIndex].feedbackBoolean[feedbackIndex] = false;\n    this.gradeUpdate(studentIndex);\n  }\n\n  gradeUpdate(studentIndex: number): void {\n    let totalDeductions = 0;\n    for (let n = 0; n < this.feedbacks.length; n++) {\n      if (this.students[studentIndex].feedbackBoolean[n]) {\n        totalDeductions = totalDeductions + this.feedbacks[n].deduction;\n      }\n    }\n\n    let newGrade = parseFloat(this.maxScore) - totalDeductions;\n    // if score is not an int round to 1 decimal place\n    const result = (newGrade - Math.floor(newGrade)) !== 0;\n    if (result) {\n      newGrade = parseFloat(newGrade.toFixed(1));\n    }\n\n    this.students[studentIndex].grade = newGrade.toString();\n  }\n\n  perfectGrade(studentIndex: number): void {\n    this.students[studentIndex].grade = this.maxScore;\n    // set all boolean feedback to false\n    for (let n = 0; n < this.feedbacks.length; n++) {\n      this.students[studentIndex].feedbackBoolean[n] = false;\n    }\n  }\n\n  clearGrade(studentIndex:number): void {\n    this.students[studentIndex].grade = \"\";\n    // set all boolean feedback to false\n    for (let n = 0; n < this.feedbacks.length; n++) {\n      this.students[studentIndex].feedbackBoolean[n] = false;\n    }\n  }\n\n  // Return an array of arrays of strings -- outer array is per student, inner array is feedback strings\n  // for that student.\n  getFeedbackStrings(): string[] {\n    let res = [];\n    for (let i = 0; i < this.students.length; i++) {\n      let strs = [];\n      for (let n = 0; n < this.feedbacks.length; n++) {\n        if (this.students[i].feedbackBoolean[n]) {\n          strs.push(\"-\" + this.feedbacks[n].deduction + \": \" + this.feedbacks[n].feedback);\n        }\n      }\n      // join all deduction strings together with semi-colon separator.\n      res.push(strs.join('; '));\n    }\n    return res;\n  }\n\n  updateChartData(): Array<number> {\n    let chartData: Array<number> = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n    // loop through each student to put data into histogram\n    for (let i = 0; i < this.students.length; i++) {\n      if (this.students[i].grade != \"\") {\n        const numGrade: number = Math.round((parseFloat(this.students[i].grade) / parseFloat(this.maxScore)) * 100);\n        // console.log(parseFloat(this.maxScore));\n        // console.log(numGrade);\n        // make sure in range 0 to 100\n        if (numGrade >= 0 && numGrade <= 100) {\n          if (numGrade <= 9) {\n            // 0 to 9\n            chartData[0] += 1;\n          } else if (numGrade <= 19) {\n            // 10 to 19\n            chartData[1] += 1;\n          } else if (numGrade <= 29) {\n            // 20 to 29\n            chartData[2] += 1;\n          } else if (numGrade <= 39) {\n            // 30 to 39\n            chartData[3] += 1;\n          } else if (numGrade <= 49) {\n            // 40 to 49\n            chartData[4] += 1;\n          } else if (numGrade <= 59) {\n            // 50 to 59\n            chartData[5] += 1;\n          } else if (numGrade <= 69) {\n            // 60 to 69\n            chartData[6] += 1;\n          } else if (numGrade <= 79) {\n            // 70 to 79\n            chartData[7] += 1;\n          } else if (numGrade <= 89) {\n            // 80 to 89\n            chartData[8] += 1;\n          } else if (numGrade <= 100) {\n            // 90 to 100\n            chartData[9] += 1;\n          }\n        }\n      }\n    }\n    return chartData;\n  }\n\n  updateFeedbackCount(): Array<HomeworkFeedback> {\n    // count the number of times each feedback is applied\n    // the deduction value is the count vlaue\n\n    this.feedbackCounts = []\n\n    for (let n = 0; n < this.feedbacks.length; n++) {\n      if (this.feedbacks[n].feedback != \"\") {\n        const newFeedback: HomeworkFeedback = {\n          feedback: this.feedbacks[n].feedback,\n          deduction: 0\n        }\n        this.feedbackCounts.push(newFeedback);\n      }\n      for (let i = 0; i < this.students.length; i++) {\n        if (this.students[i].feedbackBoolean[n]) {\n          this.feedbackCounts[n].deduction += 1;\n        }\n      }\n    }\n    return this.feedbackCounts;\n  }\n\n  updateAverageStat(): number {\n    let avg: number = 0;\n    let count: number = 0;\n    for (let i = 0; i < this.students.length; i++) {\n      if (this.students[i].grade != \"\") {\n        const numGrade: number = Math.round((parseFloat(this.students[i].grade) / parseFloat(this.maxScore)) * 100);\n        avg += numGrade;\n        count += 1;\n      }\n    }\n    return (avg / count)\n  }\n\n  updateMinMaxStats(): Array<number> {\n    let min: number = 0;\n    let max: number = 0;\n    let arrayGrades: Array<number> =[];\n\n    for (let i = 0; i < this.students.length; i++) {\n      if (this.students[i].grade != \"\") {\n        const numGrade: number = Math.round((parseFloat(this.students[i].grade) / parseFloat(this.maxScore)) * 100);\n        arrayGrades.push(numGrade);\n      }\n    }\n    min = Math.min.apply(Math, arrayGrades)\n    max = Math.max.apply(Math, arrayGrades)\n    return [min, max]\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}